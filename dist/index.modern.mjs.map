{"version":3,"file":"index.modern.mjs","sources":["../src/validatorjs/Resolver.ts"],"sourcesContent":["import { ValidationResolver } from 'react-form-reducer';\nimport Validator, { ErrorMessages, Rules } from 'validatorjs';\nimport { Errors } from 'react-form-reducer';\n\nexport default class Resolver<\n  IData extends { [key: string]: unknown } | null\n> extends ValidationResolver<IData> {\n  rules?: Rules;\n  messages?: ErrorMessages;\n\n  constructor(rules: Rules, messages?: ErrorMessages) {\n    super();\n    this.rules = rules;\n    this.messages = messages;\n\n    return this;\n  }\n\n  validate(fields: IData, fieldsToCheck?: Array<keyof IData>): true | Errors {\n    let rules: { [key: string]: unknown } = this.rules || {};\n    let validateFields: { [key: string]: unknown } = fields || {};\n    if (fieldsToCheck) {\n      validateFields = {};\n      const fieldRules: { [key: string]: unknown } = {};\n      fieldsToCheck.forEach((fieldKey) => {\n        validateFields[fieldKey as string] = fields?.[fieldKey as string];\n        if (rules[fieldKey as string]) {\n          fieldRules[fieldKey as string] = rules[fieldKey as string];\n        }\n      });\n      rules = fieldRules;\n    }\n    const validation = new Validator(\n      validateFields,\n      rules as Rules,\n      this.messages\n    );\n    const pass = validation.passes();\n    if (pass) return true;\n    return validation.errors.all();\n  }\n}\n"],"names":["Resolver","ValidationResolver","constructor","rules","messages","super","this","validate","fields","fieldsToCheck","validateFields","fieldRules","forEach","fieldKey","validation","Validator","passes","errors","all"],"mappings":"yFAIqBA,UAEXC,EAIRC,YAAYC,EAAcC,GAKxB,OAJAC,QAAQC,KAJVH,WAAK,EAAAG,KACLF,cAAQ,EAINE,KAAKH,MAAQA,EACbG,KAAKF,SAAWA,EAETE,IACT,CAEAC,SAASC,EAAeC,GACtB,IAAIN,EAAoCG,KAAKH,OAAS,GAClDO,EAA6CF,GAAU,CAAA,EAC3D,GAAIC,EAAe,CACjBC,EAAiB,GACjB,MAAMC,EAAyC,CAAA,EAC/CF,EAAcG,QAASC,IACrBH,EAAeG,GAAsBL,MAAAA,OAAAA,EAAAA,EAASK,GAC1CV,EAAMU,KACRF,EAAWE,GAAsBV,EAAMU,GACxC,GAEHV,EAAQQ,CACT,CACD,MAAMG,EAAa,IAAIC,EACrBL,EACAP,EACAG,KAAKF,UAGP,QADaU,EAAWE,UAEjBF,EAAWG,OAAOC,KAC3B"}