{"version":3,"file":"index.module.js","sources":["../src/validatorjs/Resolver.ts"],"sourcesContent":["import { ValidationResolver } from 'react-form-reducer';\nimport Validator, { ErrorMessages, Rules } from 'validatorjs';\nimport { Errors } from 'react-form-reducer';\n\nexport default class Resolver<\n  IData extends { [key: string]: unknown } | null\n> extends ValidationResolver<IData> {\n  rules?: Rules;\n  messages?: ErrorMessages;\n\n  constructor(rules: Rules, messages?: ErrorMessages) {\n    super();\n    this.rules = rules;\n    this.messages = messages;\n\n    return this;\n  }\n\n  validate(fields: IData, fieldsToCheck?: Array<keyof IData>): true | Errors {\n    let rules: { [key: string]: unknown } = this.rules || {};\n    let validateFields: { [key: string]: unknown } = fields || {};\n    if (fieldsToCheck) {\n      validateFields = {};\n      const fieldRules: { [key: string]: unknown } = {};\n      fieldsToCheck.forEach((fieldKey) => {\n        validateFields[fieldKey as string] = fields?.[fieldKey as string];\n        if (rules[fieldKey as string]) {\n          fieldRules[fieldKey as string] = rules[fieldKey as string];\n        }\n      });\n      rules = fieldRules;\n    }\n    const validation = new Validator(\n      validateFields,\n      rules as Rules,\n      this.messages\n    );\n    const pass = validation.passes();\n    if (pass) return true;\n    return validation.errors.all();\n  }\n}\n"],"names":["Resolver","_ValidationResolver","rules","messages","_this","call","this","_assertThisInitialized","prototype","validate","fields","fieldsToCheck","validateFields","fieldRules","forEach","fieldKey","validation","Validator","passes","errors","all","ValidationResolver"],"mappings":"uUAIqB,IAAAA,eAEnB,SAAAC,WAIA,SAAAD,EAAYE,EAAcC,OAAwBC,EAKhD,OAJAA,EAAAH,EAAAI,KAAOC,OAAAA,MAJTJ,WAAKE,EAAAA,EACLD,gBAIEC,EAAKF,MAAQA,EACbE,EAAKD,SAAWA,EAEhBI,EAAAH,IAAAG,EAAAH,EACF,CAwBCJ,SAlCDC,KAAAD,yEAUCA,EAAAQ,UAEDC,SAAA,SAASC,EAAeC,GACtB,IAAIT,EAAoCI,KAAKJ,OAAS,GAClDU,EAA6CF,GAAU,GAC3D,GAAIC,EAAe,CACjBC,EAAiB,CAAA,EACjB,IAAMC,EAAyC,GAC/CF,EAAcG,QAAQ,SAACC,GACrBH,EAAeG,GAA4B,MAANL,OAAM,EAANA,EAASK,GAC1Cb,EAAMa,KACRF,EAAWE,GAAsBb,EAAMa,GAE3C,GACAb,EAAQW,CACT,CACD,IAAMG,EAAa,IAAIC,EACrBL,EACAV,EACAI,KAAKH,UAGP,QADaa,EAAWE,UAEjBF,EAAWG,OAAOC,KAC3B,EAACpB,CAAA,CAlCD,CAAQqB"}